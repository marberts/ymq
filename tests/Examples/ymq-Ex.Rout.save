
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ymq"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('ymq')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("convert")
> ### * convert
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: convert
> ### Title: Convert YYYYMM to YYYYQQ.
> ### Aliases: m2q q2m
> 
> ### ** Examples
> 
> m2q(202103)
[1] 202101
> q2m(202103)
[1] 202107
>
> # Represent as the third month of the quarter
> q2m(202103) %+m% 2L
[1] 202109
> 
> # Represent as YYYYMMDD
> q2m(202103) * 100L + 1L
[1] 20210701
> 
> 
> 
> cleanEx()
> nameEx("digits")
> ### * digits
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: digits
> ### Title: Number of integer digits
> ### Aliases: digits
> 
> ### ** Examples
> 
> digits(100)
[1] 3
> digits(100.1)
[1] 3
> 
> 
> 
> cleanEx()
> nameEx("infix")
> ### * infix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infix
> ### Title: Infix operators to work with year months (YYYYMM) and year
> ###   quarters (YYYYQQ).
> ### Aliases: %+m% %-m% %m-m% %m:m% %+q% %-q% %q-q% %q:q%
> 
> ### ** Examples
> 
> # Add or subtract months/quarters
> 202101 %+m% 13
[1] 202202
> 202101 %-m% 13
[1] 201912
> 202101 %+q% 5
[1] 202202
> 202101 %-q% 5
[1] 201904
> 
> # Find the difference
> 202101 %m-m% 202202
[1] -13
> 202202 %q-q% 202101
[1] 5
> 
> # Make a sequence
> 202101 %m:m% 202202
 [1] 202101 202102 202103 202104 202105 202106 202107 202108 202109 202110
[11] 202111 202112 202201 202202
> 202101 %q:q% 202202
[1] 202101 202102 202103 202104 202201 202202
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.168 0.026 0.193 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
